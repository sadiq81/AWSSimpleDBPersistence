<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:s0="http://sdb.amazonaws.com/doc/2009-04-15/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:tns="http://sdb.amazonaws.com/doc/2009-04-15/" targetNamespace="http://sdb.amazonaws.com/doc/2009-04-15/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://sdb.amazonaws.com/doc/2009-04-15/">
      <xs:element name="ResponseMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RequestId" type="xs:string" />
            <xs:element name="BoxUsage" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Attribute">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element minOccurs="0" name="Value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReplaceableAttribute">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element name="Value" type="xs:string" />
          <xs:element minOccurs="0" default="false" name="Replace" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UpdateCondition">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element minOccurs="0" name="Value" type="xs:string" />
          <xs:element minOccurs="0" default="true" name="Exists" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Item">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Attribute" type="tns:Attribute" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReplaceableItem">
        <xs:sequence>
          <xs:element name="ItemName" type="xs:string" />
          <xs:element maxOccurs="unbounded" name="Attribute" type="tns:ReplaceableAttribute" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DeleteableItem">
        <xs:sequence>
          <xs:element name="ItemName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Attribute" type="tns:Attribute" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CreateDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListDomains">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MaxNumberOfDomains" type="xs:int" />
            <xs:element minOccurs="0" name="NextToken" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListDomainsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ListDomainsResult" />
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListDomainsResult">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="DomainName" type="xs:string" />
            <xs:element minOccurs="0" name="NextToken" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DomainMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DomainMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:DomainMetadataResult" />
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DomainMetadataResult">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ItemCount" type="xs:string" />
            <xs:element name="ItemNamesSizeBytes" type="xs:string" />
            <xs:element name="AttributeNameCount" type="xs:string" />
            <xs:element name="AttributeNamesSizeBytes" type="xs:string" />
            <xs:element name="AttributeValueCount" type="xs:string" />
            <xs:element name="AttributeValuesSizeBytes" type="xs:string" />
            <xs:element name="Timestamp" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PutAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
            <xs:element name="ItemName" type="xs:string" />
            <xs:element maxOccurs="unbounded" name="Attribute" type="tns:ReplaceableAttribute" />
            <xs:element minOccurs="0" name="Expected" type="tns:UpdateCondition" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PutAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BatchPutAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
            <xs:element maxOccurs="unbounded" name="Item" type="tns:ReplaceableItem" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BatchPutAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
            <xs:element name="ItemName" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="unbounded" name="AttributeName" type="xs:string" />
            <xs:element minOccurs="0" default="false" name="ConsistentRead" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:GetAttributesResult" />
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAttributesResult">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Attribute" type="tns:Attribute" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
            <xs:element name="ItemName" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Attribute" type="tns:Attribute" />
            <xs:element minOccurs="0" name="Expected" type="tns:UpdateCondition" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BatchDeleteAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DomainName" type="xs:string" />
            <xs:element maxOccurs="unbounded" name="Item" type="tns:DeleteableItem" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BatchDeleteAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Select">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SelectExpression" type="xs:string" />
            <xs:element minOccurs="0" name="NextToken" type="xs:string" />
            <xs:element minOccurs="0" default="false" name="ConsistentRead" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SelectResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:SelectResult" />
            <xs:element ref="tns:ResponseMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SelectResult">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Item" type="tns:Item" />
            <xs:element minOccurs="0" name="NextToken" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="CreateDomainRequestMsg">
    <part name="body" element="tns:CreateDomain" />
  </message>
  <message name="CreateDomainResponseMsg">
    <part name="body" element="tns:CreateDomainResponse" />
  </message>
  <message name="ListDomainsRequestMsg">
    <part name="body" element="tns:ListDomains" />
  </message>
  <message name="ListDomainsResponseMsg">
    <part name="body" element="tns:ListDomainsResponse" />
  </message>
  <message name="DomainMetadataRequestMsg">
    <part name="body" element="tns:DomainMetadata" />
  </message>
  <message name="DomainMetadataResponseMsg">
    <part name="body" element="tns:DomainMetadataResponse" />
  </message>
  <message name="DeleteDomainRequestMsg">
    <part name="body" element="tns:DeleteDomain" />
  </message>
  <message name="DeleteDomainResponseMsg">
    <part name="body" element="tns:DeleteDomainResponse" />
  </message>
  <message name="PutAttributesRequestMsg">
    <part name="body" element="tns:PutAttributes" />
  </message>
  <message name="PutAttributesResponseMsg">
    <part name="body" element="tns:PutAttributesResponse" />
  </message>
  <message name="BatchPutAttributesRequestMsg">
    <part name="body" element="tns:BatchPutAttributes" />
  </message>
  <message name="BatchPutAttributesResponseMsg">
    <part name="body" element="tns:BatchPutAttributesResponse" />
  </message>
  <message name="GetAttributesRequestMsg">
    <part name="body" element="tns:GetAttributes" />
  </message>
  <message name="GetAttributesResponseMsg">
    <part name="body" element="tns:GetAttributesResponse" />
  </message>
  <message name="DeleteAttributesRequestMsg">
    <part name="body" element="tns:DeleteAttributes" />
  </message>
  <message name="DeleteAttributesResponseMsg">
    <part name="body" element="tns:DeleteAttributesResponse" />
  </message>
  <message name="BatchDeleteAttributesRequestMsg">
    <part name="body" element="tns:BatchDeleteAttributes" />
  </message>
  <message name="BatchDeleteAttributesResponseMsg">
    <part name="body" element="tns:BatchDeleteAttributesResponse" />
  </message>
  <message name="SelectRequestMsg">
    <part name="body" element="tns:Select" />
  </message>
  <message name="SelectResponseMsg">
    <part name="body" element="tns:SelectResponse" />
  </message>
  <portType name="AmazonSDBPortType">
    <operation name="CreateDomain">
      <wsdl:documentation>
				The CreateDomain operation creates a new domain. The domain name must be unique
				among the domains associated with the Access Key ID provided in the request. The CreateDomain
				operation may take 10 or more seconds to complete.
                        </wsdl:documentation>
      <input wsa:Action="urn:CreateDomain" message="tns:CreateDomainRequestMsg" />
      <output wsa:Action="urn:CreateDomain:Response" message="tns:CreateDomainResponseMsg" />
    </operation>
    <operation name="ListDomains">
      <wsdl:documentation>
				The ListDomains operation lists all domains associated with the Access Key ID. It returns
				domain names up to the limit set by MaxNumberOfDomains. A NextToken is returned if there are more
				than MaxNumberOfDomains domains. Calling ListDomains successive times with the
				NextToken returns up to MaxNumberOfDomains more domain names each time.
                        </wsdl:documentation>
      <input wsa:Action="urn:ListDomains" message="tns:ListDomainsRequestMsg" />
      <output wsa:Action="urn:ListDomains:Response" message="tns:ListDomainsResponseMsg" />
    </operation>
    <operation name="DomainMetadata">
      <wsdl:documentation>
				The DomainMetadata operation returns some domain metadata values, such as the
                number of items, attribute names and attribute values along with their sizes.
            </wsdl:documentation>
      <input wsa:Action="urn:DomainMetadata" message="tns:DomainMetadataRequestMsg" />
      <output wsa:Action="urn:DomainMetadata:Response" message="tns:DomainMetadataResponseMsg" />
    </operation>
    <operation name="DeleteDomain">
      <wsdl:documentation>
				The DeleteDomain operation deletes a domain. Any items (and their attributes) in the domain
				are deleted as well. The DeleteDomain operation may take 10 or more seconds to complete.
                        </wsdl:documentation>
      <input wsa:Action="urn:DeleteDomain" message="tns:DeleteDomainRequestMsg" />
      <output wsa:Action="urn:DeleteDomain:Response" message="tns:DeleteDomainResponseMsg" />
    </operation>
    <operation name="PutAttributes">
      <wsdl:documentation>

				The PutAttributes operation creates or replaces attributes within an item. You specify new attributes
				using a combination of the Attribute.X.Name and Attribute.X.Value parameters. You specify
				the first attribute by the parameters Attribute.0.Name and Attribute.0.Value, the second
				attribute by the parameters Attribute.1.Name and Attribute.1.Value, and so on.

				Attributes are uniquely identified within an item by their name/value combination. For example, a single
				item can have the attributes { "first_name", "first_value" } and { "first_name",
				second_value" }. However, it cannot have two attribute instances where both the Attribute.X.Name and
				Attribute.X.Value are the same.

				Optionally, the requestor can supply the Replace parameter for each individual value. Setting this value
				to true will cause the new attribute value to replace the existing attribute value(s). For example, if an
				item has the attributes { 'a', '1' }, { 'b', '2'} and { 'b', '3' } and the requestor does a
				PutAttributes of { 'b', '4' } with the Replace parameter set to true, the final attributes of the
				item will be { 'a', '1' } and { 'b', '4' }, replacing the previous values of the 'b' attribute
				with the new value.
                        </wsdl:documentation>
      <input wsa:Action="urn:PutAttributes" message="tns:PutAttributesRequestMsg" />
      <output wsa:Action="urn:PutAttributes:Response" message="tns:PutAttributesResponseMsg" />
    </operation>
    <operation name="BatchPutAttributes">
      <wsdl:documentation>

				The BatchPutAttributes operation creates or replaces attributes within one or more items.
				You specify the item name with the Item.X.ItemName parameter.
				You specify new attributes using a combination of the Item.X.Attribute.Y.Name and Item.X.Attribute.Y.Value parameters.
				You specify the first attribute for the first item by the parameters Item.0.Attribute.0.Name and Item.0.Attribute.0.Value,
				the second attribute for the first item by the parameters Item.0.Attribute.1.Name and Item.0.Attribute.1.Value, and so on.

				Attributes are uniquely identified within an item by their name/value combination. For example, a single
				item can have the attributes { "first_name", "first_value" } and { "first_name",
				second_value" }. However, it cannot have two attribute instances where both the Item.X.Attribute.Y.Name and
				Item.X.Attribute.Y.Value are the same.

				Optionally, the requestor can supply the Replace parameter for each individual value. Setting this value
				to true will cause the new attribute value to replace the existing attribute value(s). For example, if an
				item 'I' has the attributes { 'a', '1' }, { 'b', '2'} and { 'b', '3' } and the requestor does a
				BacthPutAttributes of {'I', 'b', '4' } with the Replace parameter set to true, the final attributes of the
				item will be { 'a', '1' } and { 'b', '4' }, replacing the previous values of the 'b' attribute
				with the new value.

			</wsdl:documentation>
      <input wsa:Action="urn:BatchPutAttributes" message="tns:BatchPutAttributesRequestMsg" />
      <output wsa:Action="urn:BatchPutAttributes:Response" message="tns:BatchPutAttributesResponseMsg" />
    </operation>
    <operation name="GetAttributes">
      <wsdl:documentation>
				Returns all of the attributes associated with the item. Optionally, the attributes returned can be limited to
				the specified AttributeName parameter.

				If the item does not exist on the replica that was accessed for this operation, an empty attribute is
				returned. The system does not return an error as it cannot guarantee the item does not exist on other
				replicas.
                        </wsdl:documentation>
      <input wsa:Action="urn:GetAttributes" message="tns:GetAttributesRequestMsg" />
      <output wsa:Action="urn:GetAttributes:Response" message="tns:GetAttributesResponseMsg" />
    </operation>
    <operation name="DeleteAttributes">
      <wsdl:documentation>
				Deletes one or more attributes associated with the item. If all attributes of an item are deleted, the item is
				deleted.
			</wsdl:documentation>
      <input wsa:Action="urn:DeleteAttributes" message="tns:DeleteAttributesRequestMsg" />
      <output wsa:Action="urn:DeleteAttributes:Response" message="tns:DeleteAttributesResponseMsg" />
    </operation>
    <operation name="BatchDeleteAttributes">
      <wsdl:documentation>
				Deletes one or more attributes associated with one or more items.
				If all attributes of an item are deleted, the item is deleted.
			</wsdl:documentation>
      <input wsa:Action="urn:BatchDeleteAttributes" message="tns:BatchDeleteAttributesRequestMsg" />
      <output wsa:Action="urn:BatchDeleteAttributes:Response" message="tns:BatchDeleteAttributesResponseMsg" />
    </operation>
    <operation name="Select">
      <wsdl:documentation>
				The Select operation returns a set of item names and associate attributes that match the
				query expression. Select operations that run longer than 5 seconds will likely time-out
				and return a time-out error response.
            </wsdl:documentation>
      <input wsa:Action="urn:Select" message="tns:SelectRequestMsg" />
      <output wsa:Action="urn:Select:Response" message="tns:SelectResponseMsg" />
    </operation>
  </portType>
  <binding name="AmazonSDBBinding" type="tns:AmazonSDBPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="CreateDomain">
      <soap:operation soapAction="CreateDomain" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ListDomains">
      <soap:operation soapAction="ListDomains" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DomainMetadata">
      <soap:operation soapAction="DomainMetadata" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeleteDomain">
      <soap:operation soapAction="DeleteDomain" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="PutAttributes">
      <soap:operation soapAction="PutAttributes" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="BatchPutAttributes">
      <soap:operation soapAction="BatchPutAttributes" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetAttributes">
      <soap:operation soapAction="GetAttributes" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeleteAttributes">
      <soap:operation soapAction="DeleteAttributes" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="BatchDeleteAttributes">
      <soap:operation soapAction="BatchDeleteAttributes" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="Select">
      <soap:operation soapAction="Select" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <service name="AmazonSimpleDB">
    <wsdl:documentation>
			Amazon SimpleDB is a web service for running queries on structured
			data in real time. This service works in close conjunction with Amazon 
			Simple Storage Service (Amazon S3) and Amazon Elastic Compute Cloud 
			(Amazon EC2), collectively providing the ability to store, process 
			and query data sets in the cloud. These services are designed to make 
			web-scale computing easier and more cost-effective for developers.

			Traditionally, this type of functionality has been accomplished with 
			a clustered relational database that requires a sizable upfront 
			investment, brings more complexity than is typically needed, and often 
			requires a DBA to maintain and administer. In contrast, Amazon SimpleDB 
			is easy to use and provides the core functionality of a database - 
			real-time lookup and simple querying of structured data without the 
			operational complexity.  Amazon SimpleDB requires no schema, automatically 
			indexes your data and provides a simple API for storage and access.  
			This eliminates the administrative burden of data modeling, index 
			maintenance, and performance tuning. Developers gain access to this 
			functionality within Amazon's proven computing environment, are able 
			to scale instantly, and pay only for what they use. 
		</wsdl:documentation>
    <port name="AmazonSDBPortType" binding="tns:AmazonSDBBinding">
      <soap:address location="https://sdb.amazonaws.com" />
    </port>
  </service>
</definitions>